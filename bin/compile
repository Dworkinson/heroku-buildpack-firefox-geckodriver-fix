#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>
# Last updated: June 20, 2025

set -e

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
LP_DIR=$(cd "$(dirname "$0")"; cd ..; pwd)

function error() {
  echo " !     $*" >&2
  exit 1
}

function topic() {
  echo "-----> $*"
}

function indent() {
  sed 's/^/       /'
}

# Firefox & Geckodriver versions
VERSION_FIREFOX=139.0.4
VERSION_GECKODRIVER=0.36.0
LANG=en-US
PLATFORM=linux64

ARCHIVE_NAME_FIREFOX=firefox
ARCHIVE_NAME_GECKODRIVER=geckodriver
FILE_NAME_FIREFOX=${ARCHIVE_NAME_FIREFOX}-${VERSION_FIREFOX}.tar.xz
FILE_NAME_GECKODRIVER=${ARCHIVE_NAME_GECKODRIVER}-v${VERSION_GECKODRIVER}-${PLATFORM}.tar.gz
BUILDPACK_FIREFOX_PACKAGE="https://download.mozilla.org/?product=firefox-${VERSION_FIREFOX}-SSL&os=${PLATFORM}&lang=${LANG}"
BUILDPACK_GECKODRIVER_PACKAGE="https://github.com/mozilla/geckodriver/releases/download/v${VERSION_GECKODRIVER}/${FILE_NAME_GECKODRIVER}"

# Supported stack
case "$STACK" in
  "heroku-24" | "heroku-22" | "heroku-20" | "heroku-18" | "heroku-16")
    PACKAGES="
      libappindicator1
      libasound2
      libatk1.0-0
      libatk-bridge2.0-0
      libcairo-gobject2
      libgconf-2-4
      libgtk-3-0
      libice6
      libnspr4
      libnss3
      libsm6
      libx11-xcb1
      libxcomposite1
      libxcursor1
      libxdamage1
      libxfixes3
      libxi6
      libxinerama1
      libxrandr2
      libxss1
      libxt6
      libxtst6
      fonts-liberation
    "
    ;;
  *)
    error "Must be on a supported Heroku stack (heroku-24, -22, -20, -18, -16)"
esac

# Clear old apt cache
if [ ! -f "$CACHE_DIR/PURGED_CACHE_V1" ]; then
  topic "Purging apt cache"
  rm -rf "$CACHE_DIR/apt" "$CACHE_DIR/archives" "$CACHE_DIR/lists"
  touch "$CACHE_DIR/PURGED_CACHE_V1"
fi

# Setup apt dirs
APT_CACHE_DIR="$CACHE_DIR/apt/cache"
APT_STATE_DIR="$CACHE_DIR/apt/state"
mkdir -p "$APT_CACHE_DIR/archives/partial" "$APT_STATE_DIR/lists/partial"
APT_OPTIONS="-o debug::nolocking=true -o dir::cache=$APT_CACHE_DIR -o dir::state=$APT_STATE_DIR"

topic "Updating apt caches"
apt-get $APT_OPTIONS update | indent

# Download apt packages
for PACKAGE in $PACKAGES; do
  topic "Fetching .debs for $PACKAGE"
  apt-get $APT_OPTIONS -y -d install --reinstall $PACKAGE | indent
done

# Extract .debs into .apt directory
mkdir -p "$BUILD_DIR/.apt"
for DEB in "$APT_CACHE_DIR"/archives/*.deb; do
  topic "Installing $(basename "$DEB")"
  dpkg -x "$DEB" "$BUILD_DIR/.apt/"
done

# Firefox
if [ ! -f "$CACHE_DIR/$FILE_NAME_FIREFOX" ]; then
  topic "Downloading Firefox"
  curl -sSL "$BUILDPACK_FIREFOX_PACKAGE" -o "$CACHE_DIR/$FILE_NAME_FIREFOX"
fi

topic "Extracting Firefox to vendor"
mkdir -p "$BUILD_DIR/vendor/firefox"
tar -xJf "$CACHE_DIR/$FILE_NAME_FIREFOX" --strip-components=1 -C "$BUILD_DIR/vendor/firefox"

# Geckodriver
if [ ! -f "$CACHE_DIR/$FILE_NAME_GECKODRIVER" ]; then
  topic "Downloading Geckodriver"
  curl -sSL "$BUILDPACK_GECKODRIVER_PACKAGE" -o "$CACHE_DIR/$FILE_NAME_GECKODRIVER"
fi

topic "Extracting Geckodriver"
mkdir -p "$BUILD_DIR/vendor/geckodriver"
tar -xzf "$CACHE_DIR/$FILE_NAME_GECKODRIVER" -C "$BUILD_DIR/vendor/geckodriver"
chmod +x "$BUILD_DIR/vendor/geckodriver/geckodriver"

chmod +x "$BUILD_DIR/vendor/firefox/firefox"

# Set environment
topic "Setting environment variables"
mkdir -p "$BUILD_DIR/.profile.d"
cat <<EOF > "$BUILD_DIR/.profile.d/000_firefox_env.sh"
export PATH="\$HOME/.apt/usr/bin:\$HOME/vendor/firefox:\$HOME/vendor/geckodriver:\$PATH"
export LD_LIBRARY_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu:\$HOME/.apt/usr/lib/i386-linux-gnu:\$HOME/.apt/usr/lib:\$HOME/vendor/firefox:\$HOME/vendor/geckodriver:\$LD_LIBRARY_PATH"
export LIBRARY_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu:\$HOME/.apt/usr/lib/i386-linux-gnu:\$HOME/.apt/usr/lib:\$HOME/vendor/firefox:\$HOME/vendor/geckodriver:\$LIBRARY_PATH"
export INCLUDE_PATH="\$HOME/.apt/usr/include:\$HOME/.apt/usr/include/x86_64-linux-gnu:\$INCLUDE_PATH"
export CPATH="\$INCLUDE_PATH"
export CPPPATH="\$INCLUDE_PATH"
export PKG_CONFIG_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu/pkgconfig:\$HOME/.apt/usr/lib/i386-linux-gnu/pkgconfig:\$HOME/.apt/usr/lib/pkgconfig:\$PKG_CONFIG_PATH"
export TMPDIR="\$HOME/tmp"
EOF

# Give environment to later buildpacks
export | grep -E ' (PATH|LD_LIBRARY_PATH|LIBRARY_PATH|INCLUDE_PATH|CPATH|CPPPATH|PKG_CONFIG_PATH)=' > "$LP_DIR/export"

topic "Done installing Firefox and Geckodriver"
